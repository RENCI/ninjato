server {
    listen          80;
    client_max_body_size 500M;
    server_name     <fill_in_server_host_name>;
    rewrite ^/(.*)  https://<fill_in_server_host_name>/$1 permanent;
}

upstream girder {
    server girder:8080;
}

server {
    listen 443 ssl;
    client_max_body_size 500M;
    server_name ninjatodev.renci.org;
    ssl_protocols TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_certificate /a/<fill_in_cert_file_name>;
    ssl_certificate_key /a/<fill_in_cert_key_file_name>;
    if ($http_host != "<fill_in_server_host_name>") {
        rewrite ^ https://<fill_in_server_host_name>$request_uri permanent;
    }
    
    location / {
        proxy_set_header Host $proxy_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://girder;
        # Must set the following for SSE notifications to work
        proxy_buffering off;
        proxy_cache off;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        chunked_transfer_encoding off;
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
        # proxy_request_buffering option only works on nginx >= 1.7.11
        # but is necessary to support streaming requests
        proxy_request_buffering off;
    }
}

